/* Q1: Some of the facilities charge a fee to members, but some do not.
Please list the names of the facilities that do. */

SELECT name
From Facilities 
Where membercost > 0.00 


/* Q2: How many facilities do not charge a fee to members? */

Select COUNT( name) As num
FROM Facilities
Where membercost = 0.00

/* Q3: How can you produce a list of facilities that charge a fee to members,
where the fee is less than 20% of the facility's monthly maintenance cost?
Return the facid, facility name, member cost, and monthly maintenance of the
facilities in question. */

SELECT facid, name AS Facility_Name, membercost AS Member_Cost, monthlymaintenance AS Monthly_Maintenance
From Facilities
WHERE membercost < monthlymaintenance * 0.2 AND membercost > 0.00

/* Q4: How can you retrieve the details of facilities with ID 1 and 5?
Write the query without using the OR operator. */

SELECT *
FROM Facilities
WHERE facid IN(1,5)

/* Q5: How can you produce a list of facilities, with each labelled as
'cheap' or 'expensive', depending on if their monthly maintenance cost is
more than $100? Return the name and monthly maintenance of the facilities
in question. */

SELECT name, monthlymaintenance, 
CASE 
	WHEN monthlymaintenance > 100.00
		THEN  'expensive'
		ELSE  'cheap'
END AS facility_label
FROM Facilities

/* Q6: You'd like to get the first and last name of the last member(s)
who signed up. Do not use the LIMIT clause for your solution. */

SELECT firstname, surname
FROM Members
WHERE joindate = (SELECT MAX( joindate ) FROM Members )

/* Q7: How can you produce a list of all members who have used a tennis court?
Include in your output the name of the court, and the name of the member
formatted as a single column. Ensure no duplicate data, and order by
the member name. */

SELECT Facilities.name AS Name_of_Facility, 
	CONCAT ( Members.firstname,  ' ', Members.surname ) AS Member_name
FROM Facilities, Bookings, Members
Where Bookings.facid = Facilities.facid   AND
 	  Bookings.memid = Members.memid   AND
	  Facilities.name LIKE '%Tennis Court%'
GROUP BY Member_name 
ORDER BY Member_name 

/* Q8: How can you produce a list of bookings on the day of 2012-09-14 which
will cost the member (or guest) more than $30? Remember that guests have
different costs to members (the listed costs are per half-hour 'slot'), and
the guest user's ID is always 0. Include in your output the name of the
facility, the name of the member formatted as a single column, and the cost.
Order by descending cost, and do not use any subqueries. */
SELECT mems.surname AS member, facs.name AS facility,
CASE
WHEN mems.memid = 0
THEN bks.slots * facs.guestcost
ELSE bks.slots * facs.membercost
END AS cost
FROM  `Members` mems
JOIN  `Bookings` bks ON mems.memid = bks.memid
JOIN  `Facilities` facs ON bks.facid = facs.facid
WHERE bks.starttime >=  '2012-09-14'
AND bks.starttime <  '2012-09-15'
AND ((mems.memid = 0
AND bks.slots * facs.guestcost >30)
OR (mems.memid != 0
AND bks.slots * facs.membercost >30))
ORDER BY cost DESC



/* Q9: This time, produce the same result as in Q8, but using a subquery. */
SELECT member, facility, cost
FROM (

SELECT mems.surname AS member, facs.name AS facility,
CASE
WHEN mems.memid =0
THEN bks.slots * facs.guestcost
ELSE bks.slots * facs.membercost
END AS cost
FROM  `Members` mems
JOIN  `Bookings` bks ON mems.memid = bks.memid
INNER JOIN  `Facilities` facs ON bks.facid = facs.facid
WHERE bks.starttime >=  '2012-09-14'
AND bks.starttime <  '2012-09-15'
) AS bookings

WHERE cost >30
ORDER BY cost DESC

/* Q10: Produce a list of facilities with a total revenue less than 1000.
The output of facility name and total revenue, sorted by revenue. Remember
that there's a different cost for guests and members! */

SELECT facility_name, revenue
FROM ( SELECT Facilities.name AS Facility_Name, SUM( 
CASE WHEN Bookings.memid =0
THEN Bookings.slots * Facilities.guestcost
ELSE Bookings.slots * Facilities.membercost
END ) AS revenue
FROM Bookings
JOIN Facilities ON Bookings.facid = Facilities.facid
GROUP BY Facilities.name
) AS RA
WHERE revenue < 1000.0
ORDER BY revenue
